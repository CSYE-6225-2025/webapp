name: MySQL Setup and NPM Tests

on:

  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_ROOT_PASSWORD: 0308
          MYSQL_DATABASE: csye6225
          MYSQL_USER: git_user
          MYSQL_PASSWORD: 0308
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22.12.0'

      - name: Install dependencies
        run: npm install

      - name: Create .env file from GitHub Secrets
        run: |
          echo "PORT=8080" >> .env.test.local
          echo "MYSQL_DB=csye6225" >> .env.test.local
          echo "username=root" >> .env.test.local
          echo "MYSQL_PASSWORD=0308" >> .env.test.local
          echo "MYSQL_HOST=127.0.0.1" >> .env.test.local
          echo "MYSQL_PORT=8080" >> .env.test.local
          echo "MYSQL_HOST=localhost" >> .env.test.local


      - name: Debug .env file
        run: cat .env.test.local


      - name: Wait for MySQL to be ready
        run: |
          until mysqladmin ping -h"127.0.0.1" --silent; do
            echo "Waiting for database connection..."
            sleep 2
          done
    
      - name: Create git_user in MySQL
        run: |
          mysql -h172.18.0.1 -u root -p$MYSQL_ROOT_PASSWORD -e "CREATE USER IF NOT EXISTS 'git_user'@'%' IDENTIFIED BY '0308';"
          mysql -h172.18.0.1 -u root -p$MYSQL_ROOT_PASSWORD -e "GRANT ALL PRIVILEGES ON *.* TO 'git_user'@'%';"
          mysql -h172.18.0.1 -u root -p$MYSQL_ROOT_PASSWORD -e "FLUSH PRIVILEGES;"

      - name: Run tests
        run: npm test
        continue-on-error: false 
    
      - name: Install gcloud for packer
        run: "packer plugins install github.com/hashicorp/googlecompute"
      
      - name: Change directory & Initialize packer to create EC2 instance
        run: |
          cd packer
          packer init webapp.pkr.hcl
          packer init webapp-gcp.pkr.hcl
      
      - name: Format Packer
        run: |
          cd packer
          packer fmt webapp.pkr.hcl
          packer fmt webapp-gcp.pkr.hcl
      
      - name: Validate Packer
        run: |
          cd packer
          packer validate webapp.pkr.hcl
          packer validate webapp-gcp.pkr.hcl
      

