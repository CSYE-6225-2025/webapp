name: Deploy Web App on EC2 (GCP) and Run Integration Tests

on:
  pull_request_target:
    types: [closed]
    branches:
      - main

jobs:
  deploy_and_test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_ROOT_PASSWORD: "${{secrets.MYSQL_ROOT_PASSWORD}}" 
          MYSQL_DB: "${{secrets.MYSQL_DB}}"             
          MYSQL_USER: "${{secrets.MYSQL_USER}}"               
          MYSQL_PASSWORD: "${{secrets.MYSQL_PASSWORD}}"     
        ports:
          - 3306:3306

    steps:
    # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up environment file
        run: |
          echo "hostname=${{secrets.MYSQL_HOST}}" >> .env.test.local
          echo "username=${{secrets.MYSQL_USER}}" >> .env.test.local
          echo "password=${{secrets.MYSQL_PASSWORD}}" >> .env.test.local 
          echo "database=${{secrets.MYSQL_DB}}" >> .env.test.local        
          echo "MYSQL_PORT=${{secrets.MYSQL_PORT}}" >> .env.test.local
      
      - name: Debug .env file
        run: cat .env.test.local

      - name: Install dependencies
        run: npm install

      - name: Wait for MySQL to be ready
        run: |
          until mysqladmin ping -h"127.0.0.1" --silent; do
            echo "Waiting for database connection..."
            sleep 2
          done
      
      - name: Run tests
        run: npm test

      - name: Make zip
        run: zip -r webapp.zip .
      
      - name: list file after creating zip
        run: ls -1h

    # Step 2: Set up GCP CLI
      - name: Set up GCP CLI
        run: |
          echo '${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}' > gcp-key.json
          gcloud auth activate-service-account --key-file=gcp-key.json
          gcloud config set project ${{ secrets.GCP_PROJECT_ID }}
      
      - name: Validate GCP Credentials
        run: |
          gcloud auth list
          gcloud projects list | grep ${{ secrets.GCP_PROJECT_ID }}

      # Step 4: Run Packer to create EC2 instance (Make sure Packer is installed and configured)
      - name: Change directory & Initialize packer to create EC2 instance
        run: |
          cd packer
          packer init .
      
      - name: Validate Packer
        run: |
          cd packer
          packer validate .

      # Step 4: Run Packer to create EC2 instance (Make sure Packer is installed and configured)
      - name: Run Packer to create EC2 instance
        env:
              GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
              GCP_SERVICE_ACCOUNT_KEY: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
              MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
              MYSQL_DB: ${{ secrets.MYSQL_DB }}

        run: |
            echo "$GCP_SERVICE_ACCOUNT_KEY" > gcp-key.json
            gcloud auth activate-service-account --key-file=gcp-key.json
            gcloud config set project "$GCP_PROJECT_ID"

            cd packer
            packer build \
              -var "gcp_project_id=${{ secrets.GCP_PROJECT_ID }}" \
              -var "mysql_root_password=${{ secrets.MYSQL_ROOT_PASSWORD }}" \
              -var "mysql_db=${{ secrets.MYSQL_DB }}" \
              webapp-gcp.pkr.hcl

