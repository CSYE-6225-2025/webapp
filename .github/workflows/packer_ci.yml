name: Deploy Web App on EC2 (AWS) and Run Integration Tests

on:
  pull_request_target:
    types: [closed]
    branches:
      - main

jobs:
  deploy_and_test:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
          MYSQL_USER: ${{ secrets.MYSQL_USER }}
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "22.12.0"

      - name: Install dependencies
        run: npm install

      - name: Create .env file from GitHub Secrets
        run: |
          echo "PORT=${{ secrets.PORT }}" >> .env.test.local
          echo "MYSQL_DB=${{ secrets.MYSQL_DATABASE }}" >> .env.test.local
          echo "MYSQL_USER=${{ secrets.MYSQL_USER }}" >> .env.test.local
          echo "MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}" >> .env.test.local
          echo "MYSQL_HOST=${{ secrets.MYSQL_HOST }}" >> .env.test.local
          echo "MYSQL_PORT=${{ secrets.PORT }}" >> .env.test.local

      - name: Debug .env file
        run: cat .env.test.local

      - name: Wait for MySQL to be ready
        run: |
          until mysqladmin ping -h"127.0.0.1" --silent; do
            echo "Waiting for database connection..."
            sleep 2
          done

      - name: Run tests
        run: npm test

      - name: Make zip
        run: zip -r webapp.zip .

      - name: list file after creating zip
        run: ls -1h

      # Step 2: Set up AWS CLI
      - name: Set up AWS CLI
        run: |
          aws configure set aws_access_key_id "${{ secrets.AWS_ACCESS_KEY_ID }}"
          aws configure set aws_secret_access_key "${{ secrets.AWS_SECRET_ACCESS_KEY }}"
          aws configure set region us-east-1

      - name: Validate AWS Credentials
        run: |
          aws sts get-caller-identity

      # Step 4: Run Packer to create EC2 instance (Make sure Packer is installed and configured)
      - name: Change directory & Initialize packer to create EC2 instance
        run: |
          cd packer
          packer init webapp.pkr.hcl

      - name: Validate Packer
        run: |
          cd packer
          packer validate webapp.pkr.hcl

      # Step 4: Run Packer to create EC2 instance (Make sure Packer is installed and configured)
      - name: Run Packer to create EC2 instance
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          cd packer
          packer build \
          -var "aws_region=${{secrets.AWS_REGION}}" \
          -var "mysql_root_password=${{secrets.MYSQL_ROOT_PASSWORD}}" \
          -var "mysql_database=${{secrets.MYSQL_DATABASE}}" \
          webapp.pkr.hcl
